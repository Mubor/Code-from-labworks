(define (factorial num);зовнішня ф-я знаходження факторіала
(define (fac num result); внутрішня ф-я факторіала
  (if (= num 0);якщо число стає нулем то повертаємо результат
       result
      (fac (- num 1) (* num result))));якщо ні,то викликаємо нову ітерацію функції
  (fac num 1)); виклик зовнівньої ф-ї

;----------------------------------------------------------------------------------------------------

(define (pow x y); зовнішня ф-я обрахування х в степені у
  (define (pow_inside x y res);внутрішня ф-я обрахування х в степені у
    (if (= y 1); якщо у=1, тобто всі ітерації зроблені, то повертаємо результат
        res
        (pow_inside x (- y 1) (* res x))));викликаемо нову ітерацію
  (pow_inside x y x))

;-----------------------------------------------------------------------------------------------------

(define (absx num);модуль числа
  (if (< num 0)
      (* num -1)
      num))

;-----------------------------------------------------------------------------------------------------
(define (sinus x);зовнішня ф-я обрахунку синуса розкладаннямна ряд тейлора
  (define (sins x res step);внутрішня ф-я обрахунку синуса розкладаннямна ряд тейлора
    (if (< (absx (/ (pow x (- (* 2 step) 1)) (factorial step))) 0.000001);Перевірка досяжності необхыдної точності
        res
        
        (sins x (+ res (* (pow -1 step) (/ (pow x (+ (* 2 step) 1)) (factorial (+ (* 2 step) 1))))) (+ step 1))))
        
   (sins x x 1)
    )

;----------------------------------------------------------------------------------

(display "15.1\n")

(define (own_solution x)
    (if (and (< 0 x) (< x 1));якщо х підпадає під першу умову
         (- (sinus x) (sinus (/ x 2)))
         
        (if (and (<= -2 x) (<= x 0));якщо х підпадає під другу умову
              (- (pow (sinus x) 3) (sinus (+ x 0.125))))))

;-----------------------------------------------------------------------------------

(define (racket_solution x);перевірка правильності результату за допомогою влаштованої ф-ї обрахування синусу
  (if (and (< 0 x) (< x 1));якщо х підпадає під першу умову
         (- (sin x) (sin (/ x 2)))
         
        (if (and (<= -2 x) (<= x 0));якщо х підпадає під другу умову
              (- (pow (sin x) 3) (sin (+ x 0.125))))))
  
;-----------------------------------------------------------------------------------

(define (task_1 x)
  (define step_row (list x))

  (if (< x 1)

      (begin
          (display (list x (own_solution x) (racket_solution x) (- (own_solution x) (racket_solution x))))
          (display "\n")
        (task_1 (+ x 0.5))
        )))

;------------------------------------------------------------------------------------

(display "   X      Власна ф-я        Вбудована ф-я          Похибка\n")
(task_1 -2)

;------------------------------------------------------------------------------------

(display "15.2\n\n")

(define n(read));кількість учасників змагань
(display "\n")

(display(factorial n)); обраховуемо кількість послідовностей
(display "\n")

(display (/ (* n 30) 60)); знаходимо час у хвилинах, через який всі спортсмени будуть на лижах
(display " min")
(display "\n")


